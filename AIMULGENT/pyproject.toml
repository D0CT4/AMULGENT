[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "aimulgent"
version = "1.0.0"
description = "AI Multiple Agents for Coding - Advanced multi-agent system"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "AI Research Team", email = "research@aimulgent.ai"},
]
maintainers = [
    {name = "AI Research Team", email = "research@aimulgent.ai"},
]
keywords = [
    "ai",
    "multi-agent",
    "code-analysis",
    "static-analysis",
    "security",
    "code-quality",
    "machine-learning",
    "nlp",
    "transformers",
    "ast",
    "agent-based",
    "orchestration",
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Software Development :: Quality Assurance",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Typing :: Typed",
]
requires-python = ">=3.8"
dependencies = [
    "torch==2.1.0",
    "transformers==4.35.0",
    "numpy==1.26.2",
    "pandas==2.1.3",
    "matplotlib==3.8.2",
    "plotly==5.18.0",
    "networkx==3.2",
    "asyncio-mqtt==0.16.2",
    "sentence-transformers==2.2.2",
    "opencv-python==4.8.1.78",
    "graphviz==0.20.1",
    "faiss-cpu==1.7.4",
    "pydantic==2.5.2",
    "fastapi==0.105.0",
    "uvicorn==0.24.0",
    "sqlalchemy==2.0.23",
    "pydantic-settings==2.1.0",
]

[project.optional-dependencies]
dev = [
    "pytest==7.4.3",
    "pytest-asyncio==0.21.1",
    "pytest-cov==4.1.0",
    "ruff==0.1.7",
    "mypy==1.7.0",
    "pre-commit==3.5.0",
    "ipdb==0.13.13",
    "flake8==6.1.0",
    "black==23.11.0",
    "isort==5.12.0",
    "bandit==1.7.5",
    "safety==2.3.5",
    "build==1.0.3",
    "twine==4.0.2",
]
gpu = [
    "torch[gpu]==2.1.0",
    "faiss-gpu==1.7.4",
]
monitoring = [
    "prometheus-client==0.19.0",
    "opentelemetry-api==1.21.0",
    "opentelemetry-sdk==1.21.0",
]

[project.urls]
Homepage = "https://github.com/D0CT4/AMULGENT"
Repository = "https://github.com/D0CT4/AMULGENT"
Documentation = "https://github.com/D0CT4/AMULGENT/blob/main/README.md"
Issues = "https://github.com/D0CT4/AMULGENT/issues"
Changelog = "https://github.com/D0CT4/AMULGENT/blob/main/CHANGELOG.md"

[project.scripts]
aimulgent = "aimulgent.main:main"

# Package discovery
[tool.hatchling.build.targets.wheel]
packages = ["aimulgent"]

[tool.hatchling.build.targets.sdist]
include = [
    "/aimulgent",
    "/config",
    "/tests",
    "README.md",
    "LICENSE",
    "requirements.txt",
    "pyproject.toml",
]
exclude = [
    "*.pyc",
    "__pycache__",
    ".git*",
    ".pytest_cache",
    ".mypy_cache",
    ".ruff_cache",
    "*.egg-info",
    "dist",
    "build",
]

# Version management
[tool.hatchling.version]
path = "aimulgent/__version__.py"

[tool.ruff]
line-length = 100
target-version = "py38"

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings  
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by line-length
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.mypy]
python_version = "3.8"
check_untyped_defs = true
disallow_untyped_defs = true
warn_return_any = true
warn_unused_configs = true
no_implicit_optional = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
addopts = "-v --tb=short --strict-markers"
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
]

[tool.coverage.run]
source = ["aimulgent"]
omit = ["*/tests/*", "*/test_*"]

[tool.coverage.report]
show_missing = true
skip_covered = false
fail_under = 80
