[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "aimulgent"
version = "1.0.0"
description = "AI Multiple Agents for Coding - Advanced multi-agent system"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "AI Research Team", email = "research@aimulgent.ai"},
]
maintainers = [
    {name = "AI Research Team", email = "research@aimulgent.ai"},
]
keywords = [
    "ai",
    "multi-agent",
    "code-analysis",
    "static-analysis",
    "security",
    "code-quality",
    "machine-learning",
    "nlp",
    "transformers",
    "ast",
    "agent-based",
    "orchestration",
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Software Development :: Quality Assurance",
]
requires-python = ">=3.8"
dependencies = [
    "numpy>=1.21.0",
    "scipy>=1.7.0",
    "pandas>=1.3.0",
    "scikit-learn>=1.0.0",
    "torch>=1.10.0",
    "transformers>=4.20.0",
    "sentence-transformers>=2.2.0",
    "openai>=1.0.0",
    "anthropic>=0.5.0",
    "requests>=2.26.0",
    "aiohttp>=3.8.0",
    "pydantic>=2.0.0",
    "pyyaml>=6.0",
    "jinja2>=3.0.0",
    "click>=8.0.0",
    "rich>=12.0.0",
    "tqdm>=4.62.0",
    "networkx>=2.6.0",
    "pygments>=2.10.0",
    "tokenizers>=0.13.0",
    "datasets>=2.0.0",
    "huggingface-hub>=0.10.0",
    "langchain>=0.1.0",
    "chromadb>=0.4.0",
    "faiss-cpu==1.12.0",
    "pinecone-client>=2.2.0",
    "redis>=4.5.0",
    "SQLAlchemy>=2.0.0",
    "alembic>=1.11.0",
    "asyncpg>=0.27.0",
    "psycopg2-binary>=2.9.0",
    "motor>=3.1.0",
    "pymongo>=4.3.0",
    "celery>=5.2.0",
    "watchdog>=3.0.0",
    "loguru>=0.7.0",
    "python-dotenv>=1.0.0",
    "httpx>=0.24.0",
    "tenacity>=8.2.0",
    "jsonschema>=4.17.0",
    "marshmallow>=3.19.0",
    "cattrs>=23.1.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.3.0",
    "pytest-cov>=4.1.0",
    "pytest-asyncio>=0.21.0",
    "pytest-mock>=3.10.0",
    "mypy>=1.3.0",
    "black>=23.3.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "pylint>=2.17.0",
    "bandit>=1.7.5",
    "safety>=2.3.5",
    "pre-commit>=3.3.0",
]
docs = [
    "sphinx>=6.2.0",
    "sphinx-rtd-theme>=1.2.0",
    "sphinx-autodoc-typehints>=1.23.0",
    "myst-parser>=2.0.0",
    "pdoc>=14.0.0",
]
test = [
    "pytest>=7.3.0",
    "pytest-cov>=4.1.0",
    "pytest-asyncio>=0.21.0",
    "pytest-mock>=3.10.0",
    "hypothesis>=6.75.0",
    "faker>=18.9.0",
]
all = [
    "aimulgent[dev,docs,test]",
]

[project.urls]
Homepage = "https://github.com/D0CT4/AMULGENT"
Documentation = "https://aimulgent.readthedocs.io"
Repository = "https://github.com/D0CT4/AMULGENT"
Changelog = "https://github.com/D0CT4/AMULGENT/blob/main/CHANGELOG.md"
"Bug Tracker" = "https://github.com/D0CT4/AMULGENT/issues"

[project.scripts]
aimulgent = "aimulgent.cli:main"

[tool.hatch.build.targets.wheel]
packages = ["src/aimulgent"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --strict-markers --cov=src/aimulgent --cov-report=term-missing --cov-report=html --cov-report=xml"
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["src/aimulgent"]
omit = [
    "*/tests/*",
    "*/test_*.py",
    "*/__pycache__/*",
    "*/site-packages/*",
]
branch = true

[tool.coverage.report]
precision = 2
show_missing = true
skip_covered = false
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
    "@abstractmethod",
]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
strict_equality = true

[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311']
include = '\.pyi?$'
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 88
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.pylint.messages_control]
disable = [
    "C0111",  # missing-docstring
    "C0103",  # invalid-name
    "R0903",  # too-few-public-methods
]

[tool.pylint.format]
max-line-length = 88

[tool.bandit]
exclude_dirs = ["tests", "test"]
skips = ["B101", "B601"]
